<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Budget Buddy - <%= title %></title>
    <link rel="shortcut icon" href="/images/favicon.svg" type="image/svg+xml">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <img src="/images/nerdy-finance-logo-ultra.svg" alt="Budget Buddy Logo">
                <h1>Budget Buddy</h1>
            </div>
            <div class="tagline">
                "Your Wallet Will Thank You"
            </div>
            <nav>
                <ul>
                    <li>
                        <a href="/"><i class="fas fa-home"></i> Dashboard</a>
                    </li>
                    <li>
                        <a href="/income"><i class="fas fa-dollar-sign"></i> Income</a>
                    </li>
                    <li class="active">
                        <a href="/categories"><i class="fas fa-tags"></i> Categories</a>
                    </li>
                    <li>
                        <a href="/expenses"><i class="fas fa-shopping-cart"></i> Expenses</a>
                    </li>
                    <li>
                        <a href="/reports"><i class="fas fa-chart-bar"></i> Reports</a>
                    </li>
                    <li>
                        <a href="/settings"><i class="fas fa-cog"></i> Settings</a>
                    </li>
                </ul>
            </nav>
            <div class="balance-container">
                <div class="current-balance">
                    <h3>CURRENT BALANCE</h3>
                    <h2>RM<%= currentBalance.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></h2>
                    <p><i class="fas fa-arrow-up"></i> <span>5%</span> from last month</p>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <header>
                <div class="header-left">
                    <h2>Budget Buddy</h2>
                </div>
                <div class="header-right">
                    <div class="user-profile">
                        <span><%= typeof user !== 'undefined' ? user.name : 'Hafizan' %></span>
                        <i class="fas fa-user-circle"></i>
                    </div>
                    <a href="/logout" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </div>
            </header>

            <div class="content">
                <section id="categories-section" class="content-section active-section">
                    <div class="section-header">
                        <h2>Categories</h2>
                        <a href="#" class="btn-primary add-new-btn"><i class="fas fa-plus"></i> Add New Category</a>
                    </div>

                    <div class="categories-container">
                        <div class="category-tabs">
                            <button class="tab-btn active" data-tab="expense-categories">Expense Categories</button>
                            <button class="tab-btn" data-tab="income-categories">Income Categories</button>
                        </div>

                        <div class="tab-content">
                            <div id="expense-categories" class="tab-pane active">
                                <div class="category-grid">
                                    <% expenseCategories.forEach(category => { %>
                                        <div class="category-card">
                                            <div class="category-header" style="background-color: <%= category.color %>">
                                                <i class="<%= category.icon %>"></i>
                                                <h3><%= category.name %></h3>
                                            </div>
                                            <div class="category-body">
                                                <div class="category-info">
                                                    <p>Budget: RM<%= category.budget.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></p>
                                                    <p>Spent: RM<%= category.spent.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></p>
                                                </div>
                                                <div class="budget-progress">
                                                    <div class="progress-bar" style="width: <%= (category.spent / category.budget) * 100 %>%; background-color: <%= category.spent > category.budget ? '#f44336' : '#4caf50' %>"></div>
                                                </div>
                                                <p class="budget-info"><%= (category.spent / category.budget * 100).toFixed(0) %>% of budget</p>
                                                <div class="category-actions">
                                                    <a href="#" class="edit-btn"
                                                       data-id="<%= category.id %>"
                                                       data-name="<%= category.name %>"
                                                       data-description="<%= category.description || '' %>"
                                                       data-type="expense"
                                                       data-icon="<%= category.icon %>"
                                                       data-color="<%= category.color %>"
                                                       data-budget="<%= category.budget %>">
                                                       <i class="fas fa-edit"></i> Edit
                                                    </a>
                                                    <a href="#" class="delete-btn" data-id="<%= category.id %>"><i class="fas fa-trash"></i> Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>

                            <div id="income-categories" class="tab-pane">
                                <div class="category-grid">
                                    <% incomeCategories.forEach(category => { %>
                                        <div class="category-card">
                                            <div class="category-header" style="background-color: <%= category.color %>">
                                                <i class="<%= category.icon %>"></i>
                                                <h3><%= category.name %></h3>
                                            </div>
                                            <div class="category-body">
                                                <div class="category-info">
                                                    <p>Description: <%= category.description %></p>
                                                    <p>Total: RM<%= category.total.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></p>
                                                </div>
                                                <div class="category-actions">
                                                    <a href="#" class="edit-btn"
                                                       data-id="<%= category.id %>"
                                                       data-name="<%= category.name %>"
                                                       data-description="<%= category.description || '' %>"
                                                       data-type="income"
                                                       data-icon="<%= category.icon %>"
                                                       data-color="<%= category.color %>"
                                                       data-budget="0">
                                                       <i class="fas fa-edit"></i> Edit
                                                    </a>
                                                    <a href="#" class="delete-btn" data-id="<%= category.id %>"><i class="fas fa-trash"></i> Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>

    <footer>
        <p>Budget Buddy: Your Wallet Will Thank You. Developed by Hafizan.</p>
    </footer>

    <!-- Add Category Modal -->
    <div id="addCategoryModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Add New Category</h3>
                <span class="close-modal">&times;</span>
            </div>
            <div class="modal-body">
                <div id="categoryFormContainer">
                    <!-- Expense Category Form -->
                    <form id="addExpenseCategoryForm" action="/categories" method="POST" style="display: block;">
                        <input type="hidden" name="type" value="expense">
                        <div class="form-group">
                            <label for="expense-name">Category Name</label>
                            <input type="text" id="expense-name" name="name" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="expense-description">Description</label>
                            <input type="text" id="expense-description" name="description" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="expense-icon">Icon</label>
                            <input type="text" id="expense-icon" name="icon" class="form-control" value="fas fa-tag" required>
                        </div>
                        <div class="form-group">
                            <label for="expense-color">Color</label>
                            <input type="color" id="expense-color" name="color" class="form-control" value="#4caf50" required>
                        </div>
                        <div class="form-group">
                            <label for="expense-budget">Budget (RM)</label>
                            <input type="number" id="expense-budget" name="budgetLimit" class="form-control" step="0.01" min="0.01" value="0" required>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn-primary">Add Expense Category</button>
                            <button type="button" class="btn-secondary cancel-modal">Cancel</button>
                        </div>
                    </form>

                    <!-- Income Category Form -->
                    <form id="addIncomeCategoryForm" action="/categories" method="POST" style="display: none;">
                        <input type="hidden" name="type" value="income">
                        <input type="hidden" name="budgetLimit" value="0">
                        <div class="form-group">
                            <label for="income-name">Category Name</label>
                            <input type="text" id="income-name" name="name" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="income-description">Description</label>
                            <input type="text" id="income-description" name="description" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="income-icon">Icon</label>
                            <input type="text" id="income-icon" name="icon" class="form-control" value="fas fa-tag" required>
                        </div>
                        <div class="form-group">
                            <label for="income-color">Color</label>
                            <input type="color" id="income-color" name="color" class="form-control" value="#4caf50" required>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn-primary">Add Income Category</button>
                            <button type="button" class="btn-secondary cancel-modal">Cancel</button>
                        </div>
                    </form>

                    <!-- Form Type Selector -->
                    <div class="form-group" style="margin-bottom: 20px;">
                        <label for="form-type-selector">Category Type</label>
                        <select id="form-type-selector" class="form-control dark-select">
                            <option value="expense">Expense</option>
                            <option value="income">Income</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div id="editCategoryModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Edit Category</h3>
                <span class="close-modal">&times;</span>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" method="POST">
                    <input type="hidden" id="edit-category-id">
                    <div class="form-group">
                        <label for="edit-name">Category Name</label>
                        <input type="text" id="edit-name" name="name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-description">Description</label>
                        <input type="text" id="edit-description" name="description" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-type">Category Type</label>
                        <select id="edit-type" name="type" class="form-control dark-select" required>
                            <option value="">Select Category Type</option>
                            <option value="expense">Expense</option>
                            <option value="income">Income</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="edit-icon">Icon</label>
                        <input type="text" id="edit-icon" name="icon" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-color">Color</label>
                        <input type="color" id="edit-color" name="color" class="form-control" required>
                    </div>
                    <div class="form-group edit-expense-only">
                        <label for="edit-budget">Budget (RM)</label>
                        <input type="number" id="edit-budget" name="budgetLimit" class="form-control" step="0.01" min="0.01" value="0">
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn-primary">Update Category</button>
                        <button type="button" class="btn-secondary cancel-modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Category Modal -->
    <div id="deleteCategoryModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Delete Category</h3>
                <span class="close-modal">&times;</span>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category? This action cannot be undone.</p>
                <p class="warning-text">Note: Categories that are in use cannot be deleted.</p>
                <form id="deleteCategoryForm">
                    <input type="hidden" id="delete-category-id">
                    <div class="form-actions">
                        <button type="submit" class="btn-primary">Delete Category</button>
                        <button type="button" class="btn-secondary cancel-modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="/js/script.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Tab functionality
            const tabBtns = document.querySelectorAll('.tab-btn');
            const tabPanes = document.querySelectorAll('.tab-pane');

            tabBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all buttons and panes
                    tabBtns.forEach(b => b.classList.remove('active'));
                    tabPanes.forEach(p => p.classList.remove('active'));

                    // Add active class to clicked button and corresponding pane
                    this.classList.add('active');
                    document.getElementById(this.dataset.tab).classList.add('active');
                });
            });

            // Add Category Modal functionality
            const addModal = document.getElementById('addCategoryModal');
            const addBtn = document.querySelector('.add-new-btn');
            const addCloseBtn = addModal.querySelector('.close-modal');
            const addCancelBtn = addModal.querySelector('.cancel-modal');

            // Open modal when Add New Category button is clicked
            addBtn.addEventListener('click', function(e) {
                e.preventDefault();
                addModal.style.display = 'flex';
                document.body.classList.add('modal-open');
            });

            // Close modal when X button is clicked
            addCloseBtn.addEventListener('click', function() {
                addModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Close modal when Cancel button is clicked
            addCancelBtn.addEventListener('click', function() {
                addModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Close modal when clicking outside the modal content
            window.addEventListener('click', function(event) {
                if (event.target === addModal) {
                    addModal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                }
            });

            // Handle form type selector
            const formTypeSelector = document.getElementById('form-type-selector');
            const expenseCategoryForm = document.getElementById('addExpenseCategoryForm');
            const incomeCategoryForm = document.getElementById('addIncomeCategoryForm');

            // Move the form type selector to the top
            const formContainer = document.getElementById('categoryFormContainer');
            formContainer.insertBefore(
                document.querySelector('#categoryFormContainer > .form-group'),
                formContainer.firstChild
            );

            formTypeSelector.addEventListener('change', function() {
                if (this.value === 'expense') {
                    expenseCategoryForm.style.display = 'block';
                    incomeCategoryForm.style.display = 'none';
                } else {
                    expenseCategoryForm.style.display = 'none';
                    incomeCategoryForm.style.display = 'block';
                }
            });

            // Simple form validation for expense form
            expenseCategoryForm.addEventListener('submit', function(e) {
                const name = document.getElementById('expense-name').value;
                const description = document.getElementById('expense-description').value;

                if (!name || !description) {
                    e.preventDefault();
                    alert('Please fill in all required fields');
                    return;
                }

                // Close the modal after submission
                setTimeout(() => {
                    addModal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                }, 100);

                console.log('Expense form submitting');
            });

            // Simple form validation for income form
            incomeCategoryForm.addEventListener('submit', function(e) {
                const name = document.getElementById('income-name').value;
                const description = document.getElementById('income-description').value;

                if (!name || !description) {
                    e.preventDefault();
                    alert('Please fill in all required fields');
                    return;
                }

                // Close the modal after submission
                setTimeout(() => {
                    addModal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                }, 100);

                console.log('Income form submitting');
            });

            // Edit Category Modal functionality
            const editModal = document.getElementById('editCategoryModal');
            const editBtns = document.querySelectorAll('.edit-btn');
            const editForm = document.getElementById('editCategoryForm');
            const editCloseBtn = editModal.querySelector('.close-modal');
            const editCancelBtn = editModal.querySelector('.cancel-modal');
            const editTypeSelect = document.getElementById('edit-type');
            const editBudgetField = document.querySelector('.edit-expense-only');

            // Show/hide budget field based on category type in edit form
            editTypeSelect.addEventListener('change', function() {
                if (this.value === 'expense') {
                    editBudgetField.style.display = 'block';
                } else {
                    editBudgetField.style.display = 'none';
                }
            });

            // Open edit modal when Edit button is clicked
            editBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    const categoryId = this.getAttribute('data-id');
                    const categoryName = this.getAttribute('data-name');
                    const categoryDescription = this.getAttribute('data-description');
                    const categoryType = this.getAttribute('data-type');
                    const categoryIcon = this.getAttribute('data-icon');
                    const categoryColor = this.getAttribute('data-color');
                    const categoryBudget = this.getAttribute('data-budget');

                    document.getElementById('edit-category-id').value = categoryId;
                    document.getElementById('edit-name').value = categoryName;
                    document.getElementById('edit-description').value = categoryDescription;
                    document.getElementById('edit-type').value = categoryType;
                    document.getElementById('edit-icon').value = categoryIcon;
                    document.getElementById('edit-color').value = categoryColor;
                    document.getElementById('edit-budget').value = categoryBudget;

                    // Show/hide budget field based on category type
                    if (categoryType === 'expense') {
                        editBudgetField.style.display = 'block';
                    } else {
                        editBudgetField.style.display = 'none';
                    }

                    editModal.style.display = 'flex';
                    document.body.classList.add('modal-open');
                });
            });

            // Close edit modal when X button is clicked
            editCloseBtn.addEventListener('click', function() {
                editModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Close edit modal when Cancel button is clicked
            editCancelBtn.addEventListener('click', function() {
                editModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Handle edit form submission
            editForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const categoryId = document.getElementById('edit-category-id').value;
                const name = document.getElementById('edit-name').value;
                const description = document.getElementById('edit-description').value;
                const type = document.getElementById('edit-type').value;
                const icon = document.getElementById('edit-icon').value;
                const color = document.getElementById('edit-color').value;
                const budgetLimit = document.getElementById('edit-budget').value;

                if (!name || !description || !type) {
                    alert('Please fill in all required fields');
                    return;
                }

                // Set budget to 0 for income categories
                if (type === 'income') {
                    document.getElementById('edit-budget').value = '0';
                }

                // Create a form to submit the PUT request
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/categories/${categoryId}?_method=PUT`;
                form.style.display = 'none';

                // Add form fields
                const fields = {
                    name,
                    description,
                    type,
                    icon,
                    color,
                    budgetLimit: type === 'expense' ? budgetLimit : 0
                };

                for (const [key, value] of Object.entries(fields)) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = key;
                    input.value = value;
                    form.appendChild(input);
                }

                document.body.appendChild(form);
                form.submit();

                // Close the modal after submission
                setTimeout(() => {
                    editModal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                }, 100);
            });

            // Delete Category Modal functionality
            const deleteModal = document.getElementById('deleteCategoryModal');
            const deleteBtns = document.querySelectorAll('.delete-btn');
            const deleteForm = document.getElementById('deleteCategoryForm');
            const deleteCloseBtn = deleteModal.querySelector('.close-modal');
            const deleteCancelBtn = deleteModal.querySelector('.cancel-modal');

            // Open delete modal when Delete button is clicked
            deleteBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    const categoryId = this.getAttribute('data-id');
                    document.getElementById('delete-category-id').value = categoryId;
                    deleteModal.style.display = 'flex';
                    document.body.classList.add('modal-open');
                });
            });

            // Close delete modal when X button is clicked
            deleteCloseBtn.addEventListener('click', function() {
                deleteModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Close delete modal when Cancel button is clicked
            deleteCancelBtn.addEventListener('click', function() {
                deleteModal.style.display = 'none';
                document.body.classList.remove('modal-open');
            });

            // Handle delete form submission
            deleteForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const categoryId = document.getElementById('delete-category-id').value;

                // Create a form to submit the DELETE request
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/categories/${categoryId}?_method=DELETE`;
                form.style.display = 'none';
                document.body.appendChild(form);
                form.submit();

                // Close the modal after submission
                setTimeout(() => {
                    deleteModal.style.display = 'none';
                    document.body.classList.remove('modal-open');
                }, 100);
            });
        });
    </script>
</body>
</html>
